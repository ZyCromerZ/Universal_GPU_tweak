#!/system/bin/sh
# ni sh buat nge trigger ganti mode aja
# setting warna
abuHitam='\e[01;90m' > /dev/null 2>&1; # abu abu - hitam
putihHitam='\e[01;40m' > /dev/null 2>&1; # putih - hitam
merahHitam='\e[01;91m' > /dev/null 2>&1; # merah - hitam
merahPutih='\e[01;41m' > /dev/null 2>&1; # merah - putih
kuningHitam='\e[01;93m' > /dev/null 2>&1; # kuning - hitam
kuningPutih='\e[01;43m' > /dev/null 2>&1; # kuning - putih
biruHitam='\e[01;94m' > /dev/null 2>&1; # biru - hitam
biruPutih='\e[01;104m' > /dev/null 2>&1; # biru - putih
cyanHitam='\e[01;96m' > /dev/null 2>&1; # cyan - hitam
cyanPutih='\e[01;46m' > /dev/null 2>&1; # cyan - putih
hijauHitam='\e[01;92m' > /dev/null 2>&1; # hijau - hitam
hijauPutih='\e[01;42m' > /dev/null 2>&1; # hijau - putih
unguHitam='\e[01;95m' > /dev/null 2>&1; # ungu - hitam
unguPutih='\e[01;45m' > /dev/null 2>&1; # ungu - putih
ResetWarna='\e[0m' > /dev/null 2>&1; # Buat Reser Warna
# setting warna end
echo $kuningPutih"Preparing Config . . . ."$ResetWarna
usleep 1000000
if [ "$(id -u)" -gt "0" ] && [ "$(whoami)" != "root" ]; then
    echo $merahHitam"please type 'su' first -_-"$ResetWarna
    echo ""
    echo "Exit after :"
    for timeExit in 3s 2s 1s 0s ;
    do
        echo "$timeExit"
        usleep 1000000
    done
    exit -1
else
    echo $cyanPutih"<<--------------------------------->>"$ResetWarna
    usleep 200000
    echo "*  thanks for use my modules  *"
    usleep 200000
    echo $cyanPutih"<<--------------------------------->>"$ResetWarna
    usleep 200000
    echo "        ZyC GPU Turbo          "
    usleep 200000
    echo "and special thanks to @nowaydev"
    usleep 200000
    echo "       for channel logo :D     "
    usleep 200000
    echo $cyanPutih"<<--------------------------------->>"$ResetWarna
    echo "  _______          ____        "
    usleep 200000
    echo "  \___  /ɢᴘᴜ ᴛᴜʀʙᴏ/  ___\      "
    usleep 200000
    echo "     / /  __   __| /           "
    usleep 200000
    echo "    / /__ \ \ / /| \____       "
    usleep 200000
    echo "   /_____\ \ \ /  \____/       "
    usleep 200000
    echo "            / /                "
    usleep 200000
    echo "           /_/                 "
    usleep 200000
    echo "                               "
    usleep 200000
    echo "-------------------------------"
    usleep 200000
    echo "ᴅᴇsɪɢɴᴇᴅ ʙʏ ɴᴏᴡᴀʏᴅᴇᴠ           "
    usleep 200000
    echo $cyanPutih"<<--------------------------------->>"$ResetWarna
    usleep 1000000
fi
magisk=$(ls /data/adb/magisk/magisk || ls /sbin/magisk) 2>/dev/null;
GetVersion=$($magisk -c | grep -Eo '[1-9]{2}\.[0-9]+')
case "$GetVersion" in
'15.'[1-9]*) # Version 15.1 - 15.9
	ModulPath=/sbin/.core/img
;;
'16.'[1-9]*) # Version 16.1 - 16.9
	ModulPath=/sbin/.core/img
;;
'17.'[1-3]*) # Version 17.1 - 17.3
	ModulPath=/sbin/.core/img
;;
'17.'[4-9]*) # Version 17.4 - 17.9
	ModulPath=/sbin/.magisk/img
;;
'18.'[0-9]*) # Version 18.x
	ModulPath=/sbin/.magisk/img
;;
'19.'[0-9a-zA-Z]*) # Version 19.x
	ModulPath=/data/adb/modules
;;
*)
    echo "unsupported magisk version detected,fail"
    exit -1;
;;
esac
if [ ! -e /data/mod_path.txt ]; then
    zyc_turbo
fi
ModPath=$(cat /data/mod_path.txt)
Path=$ModPath/modul_mantul/ZyC_mod
PathModulConfig=$Path/ZyC_Turbo_config
PathModulConfigAi=$Path/ZyC_Ai
Perubahan="tidak"
if [ -e $PathModulConfig/status_modul.txt ];then
    GetModeBefore=$(cat "$PathModulConfig/status_modul.txt")
    GetModeNew=$(cat "$PathModulConfig/status_modul.txt")
fi
if [ -e $PathModulConfig/mode_render.txt ];then
    GetModeRenderBefore=$(cat "$PathModulConfig/mode_render.txt")
    GetModeRenderNew=$(cat "$PathModulConfig/mode_render.txt")
fi
if [ -e $PathModulConfig/fastcharge.txt ];then
    GetModeFCBefore=$(cat "$PathModulConfig/fastcharge.txt")
    GetModeFCNew=$(cat "$PathModulConfig/fastcharge.txt")
fi
if [ -e $PathModulConfig/fsync_mode.txt ];then
    GetModeFsyncBefore=$(cat "$PathModulConfig/fsync_mode.txt")
    GetModeFsyncNew=$(cat "$PathModulConfig/fsync_mode.txt")
fi
if [ -e $PathModulConfig/GpuBooster.txt ];then
    GetModeAdrenoBefore=$(cat "$PathModulConfig/GpuBooster.txt")
    GetModeAdrenoNew=$(cat "$PathModulConfig/GpuBooster.txt")
fi
if [ -e $PathModulConfig/custom_ram_management.txt ];then
    GetModeRamBefore=$(cat "$PathModulConfig/custom_ram_management.txt")
    GetModeRamNew=$(cat "$PathModulConfig/custom_ram_management.txt")
fi
if [ -e $PathModulConfigAi/ai_status.txt ];then
    GetModeAiBefore=$(cat "$PathModulConfigAi/ai_status.txt")
    GetModeAiNew=$(cat "$PathModulConfigAi/ai_status.txt")
fi
if [ -e $PathModulConfigAi/ai_change.txt ];then
    GetModeAiCBefore=$(cat "$PathModulConfigAi/ai_change.txt")
    GetModeAiCNew=$(cat "$PathModulConfigAi/ai_change.txt")
fi
if [ -e $PathModulConfigAi/ai_notif_mode.txt ];then
    GetModeAiNotifBefore=$(cat "$PathModulConfigAi/ai_notif_mode.txt")
    GetModeAiNotifNew=$(cat "$PathModulConfigAi/ai_notif_mode.txt")
fi
if [ -e $PathModulConfigAi/ai_notif_mode_running.txt ];then
    GetModeAiNotifRunningBefore=$(cat "$PathModulConfigAi/ai_notif_mode_running.txt")
    GetModeAiNotifRunningNew=$(cat "$PathModulConfigAi/ai_notif_mode_running.txt")
fi
if [ -e $PathModulConfigAi/ai_notif_mode_running_status.txt ];then
    GetModeAiNotifRunningStatusBefore=$(cat "$PathModulConfigAi/ai_notif_mode_running_status.txt")
    GetModeAiNotifRunningStatusNew=$(cat "$PathModulConfigAi/ai_notif_mode_running_status.txt")
fi
if [ -e $PathModulConfigAi/wait_time_off.txt ];then
    waitTimeOffBefore=$(cat "$PathModulConfigAi/wait_time_off.txt")
    waitTimeOffNew=$(cat "$PathModulConfigAi/wait_time_off.txt")
fi
if [ -e $PathModulConfigAi/wait_time_on.txt ];then
    waitTimeOnBefore=$(cat "$PathModulConfigAi/wait_time_on.txt")
    waitTimeOnNew=$(cat "$PathModulConfigAi/wait_time_on.txt")
fi
if [ -e $PathModulConfig/gms_doze.txt ];then
    GmsDozeBefore=$(cat "$PathModulConfig/gms_doze.txt")
    GmsDozeNew=$(cat "$PathModulConfig/gms_doze.txt")
fi
if [ -e $PathModulConfig/zram.txt ];then
    ZramBefore=$(cat "$PathModulConfig/zram.txt")
    ZramNew=$(cat "$PathModulConfig/zram.txt")
fi
if [ -e $PathModulConfig/swapinnes.txt ];then
    swapinnesBefore=$(cat "$PathModulConfig/swapinnes.txt")
    swapinnesNew=$(cat "$PathModulConfig/swapinnes.txt")
fi
if [ -e $PathModulConfig/zram_optimizer.txt ];then
    ZramOptimizerBefore=$(cat "$PathModulConfig/zram_optimizer.txt")
    ZramOptimizerNew=$(cat "$PathModulConfig/zram_optimizer.txt")
fi
RefreshList="tidak"
RestartNotif="tidak"
savedata="no"
page="1"
ListMenu(){
    clear
    echo "Version : $(cat "$PathModulConfig/notes_en.txt" | grep 'Version:' | sed "s/Version:*//g" )"
    echo "list menu : "
    if [ "$page" == "1" ];then
        if [ -e "$PathModulConfig/status_modul.txt" ];then
            echo "<-- -- Module Status Config -- -->"
            if [ "$GetModeAiBefore" == "2" ];then
                if [ "$GetModeBefore" == "$GetModeNew" ];then
                    GetModeBefore=$(cat "$PathModulConfig/status_modul.txt")
                    GetModeNew=$(cat "$PathModulConfig/status_modul.txt")
                else
                    GetModeBefore=$(cat "$PathModulConfig/status_modul.txt")
                fi
            fi
            if [ "$GetModeAiBefore" == "0" ];then
                echo "mx > turn off tweak";
                echo "my > change mode tweak to on"
                echo "mt > change mode tweak to turbo"
                echo "lm > lag mode tweak"
            else
                echo "ai mode still running,cannot change tweak mode"
                echo "mode tweak will automatic change :p"
                echo "turn off ai first for manual mode"
                echo "and re run this tweak"
            fi
            if [ "$GetModeBefore" != "$GetModeNew" ];then
                echo $kuningPutih"this will set to : $GetModeNew mode"$ResetWarna
            else
                echo $kuningHitam"current status module : $GetModeBefore mode"$ResetWarna;
            fi
            echo $cyanPutih"<<----------<=====*=====>---------->>"$ResetWarna
        fi
        if [ -e "$PathModulConfig/mode_render.txt" ];then
            echo "<-- -- Mode Render Config -- -->"
            echo "srd > Use system default"
            echo "opd > Use Default OpenGL render"
            echo "ops > Use OpenGL Skia render"
            echo "vkn > Use Vulkan render"
            if [ "$GetModeRenderBefore" != "$GetModeRenderNew" ];then
                if [ $GetModeRenderNew == "opengl" ];then
                    echo $hijauPutih"this will set to : OpenGL Default"$ResetWarna
                elif [ $GetModeRenderNew == "skiagl" ];then
                    echo $kuningPutih"this will set to : OpenGL Skia"$ResetWarna
                elif [ $GetModeRenderNew == "skiavk" ];then
                    echo $merahPutih"this will set to : Vulkan"$ResetWarna
                elif [ $GetModeRenderNew == "system" ];then
                    echo $merahPutih"this will set to : System Default"$ResetWarna
                fi
            else
                if [ $GetModeRenderBefore == "opengl" ];then
                    echo $hijauHitam"Current Status : OpenGL Default"$ResetWarna
                elif [ $GetModeRenderBefore == "skiagl" ];then
                    echo $kuningHitam"Current Status : OpenGL Skia"$ResetWarna
                elif [ $GetModeRenderBefore == "skiavk" ];then
                    echo $merahHitam"Current Status : Vulkan"$ResetWarna
                elif [ $GetModeRenderBefore == "system" ];then
                    echo $merahHitam"Current Status : System Default"$ResetWarna
                fi
            fi
            echo $cyanPutih"<<----------<=====*=====>---------->>"$ResetWarna
        fi
        if [ -e "$PathModulConfig/fastcharge.txt" ];then
            echo "<-- -- Fastcharge Config -- -->"
            echo "fs > fastcharge option by system"
            echo "fy > fastcharge option by this tweak"
            if [ "$GetModeFCBefore" != "$GetModeFCNew" ];then
                if [ $GetModeFCNew == "system" ];then
                    echo $hijauPutih"this will set to : by system"$ResetWarna
                elif [ $GetModeFCNew == "1" ];then
                    echo $hijauPutih"this will set to : by this tweak(trying to force on)"$ResetWarna
                fi
            else
                if [ $GetModeFCBefore == "system" ];then
                    echo $hijauHitam"Current Status : by system"$ResetWarna
                elif [ $GetModeFCBefore == "1" ];then
                    echo $hijauHitam"Current Status : by this tweak(trying to force on)"$ResetWarna
                fi
            fi
            echo $cyanPutih"<<----------<=====*=====>---------->>"$ResetWarna
        fi
        echo "current : page 1"
    elif [ "$page" == "2" ];then
        if [ -e "$PathModulConfig/fsync_mode.txt" ];then
            echo "<-- -- Fsync Config -- -->"
            echo "fcs > set fsync by system"
            echo "fcx > turn off fsync"
            echo "fcy > turn on fsync"
            echo "fca > auto change fsync"
            echo "      disable fsync after change to turbo mode"
            if [ "$GetModeFsyncBefore" != "$GetModeFsyncNew" ];then
                if [ $GetModeFsyncNew == "0" ];then
                    echo $merahPutih"this will set to : off"$ResetWarna
                elif [ $GetModeFsyncNew == "1" ];then
                    echo $hijauPutih"this will set to : on"$ResetWarna
                elif [ $GetModeFsyncNew == "system" ];then
                    echo $kuningPutih"this will set to : by system"$ResetWarna
                elif [ $GetModeFsyncNew == "auto" ];then
                    echo $cyanPutih"this will set to : by auto"$ResetWarna
                fi
            else
                if [ $GetModeFsyncBefore == "0" ];then
                    echo $merahHitam"Current Status : off"$ResetWarna
                elif [ $GetModeFsyncBefore == "1" ];then
                    echo $hijauHitam"Current Status : on"$ResetWarna
                elif [ $GetModeFsyncBefore == "system" ];then
                    echo $kuningHitam"Current Status : by system"$ResetWarna
                elif [ $GetModeFsyncBefore == "auto" ];then
                    echo $cyanHitam"Current Status : by auto"$ResetWarna
                fi
            fi
            echo $cyanPutih"<<----------<=====*=====>---------->>"$ResetWarna
        fi
        if [ -e "$PathModulConfig/GpuBooster.txt" ];then
            echo "adx > turn off adrenoboost"
            echo "adl > set adreno boost to low"
            echo "adm > set adreno boost to med"
            echo "adh > set adreno boost to high"
            echo "adt > set adreno boost by tweak"
            if [ "$GetModeAdrenoBefore" != "$GetModeAdrenoNew" ];then
            if [ $GetModeAdrenoNew == "0" ];then
                    echo $hijauHitam"this will set to : off"$ResetWarna
                elif [ $GetModeAdrenoNew == "1" ];then
                    echo $unguPutih"this will set to : low"$ResetWarna
                elif [ $GetModeAdrenoNew == "2" ];then
                    echo $kuningPutih"this will set to : medium"$ResetWarna
                elif [ $GetModeAdrenoNew == "3" ];then
                    echo $merahPutih"this will set to : high"$ResetWarna
                elif [ $GetModeAdrenoNew == "tweak" ];then
                    echo $biruPutih"this will set to : by tweak"$ResetWarna
                fi
            else
                if [ $GetModeAdrenoBefore == "0" ];then
                    echo $hijauHitam"Current status : off"$ResetWarna
                elif [ $GetModeAdrenoBefore == "1" ];then
                    echo $unguHitam"Current status : low"$ResetWarna
                elif [ $GetModeAdrenoBefore == "2" ];then
                    echo $kuningHitam"Current status : medium"$ResetWarna
                elif [ $GetModeAdrenoBefore == "3" ];then
                    echo $merahHitam"Current status : high"$ResetWarna
                elif [ $GetModeAdrenoBefore == "tweak" ];then
                    echo $biruHitam"Current status : by tweak"$ResetWarna
                fi
            fi
            echo $cyanPutih"<<----------<=====*=====>---------->>"$ResetWarna
        fi
        if [ -e "$PathModulConfig/custom_ram_management.txt" ];then
            echo "<-- -- Ram management Config -- -->"
            echo "rms > use system ram management"
            echo "rm1 > use ram management method 1 "
            echo "      (method for light use)"
            echo "rm2 > use ram management method 2"
            echo "      (method for open some app at same time)"
            echo "rm3 > use ram management method 3 "
            echo "      (method for open multi app & game at same time)"
            echo "rm4 > use ram management method 4"
            echo "      (method for extreme app and gaming)"
            echo " NOTE : rm4 force ram not close app"
            echo "        while running on background"
            if [ "$GetModeRamBefore" != "$GetModeRamNew" ];then
                if [ "$GetModeRamNew" == "0" ];then
                    echo $hijauPutih"this will set to : use system "$ResetWarna
                else 
                    echo $merahPutih"this will set to : method $GetModeRamNew"$ResetWarna
                fi
            else
                if [ "$GetModeRamNew" == "0" ];then
                    echo $hijauHitam"current status : use system "$ResetWarna
                else 
                    echo $merahHitam"current status : method $GetModeRamNew"$ResetWarna
                fi
            fi
            echo $cyanPutih"<<----------<=====*=====>---------->>"$ResetWarna
        fi
        
        echo "current : page 2"
    elif [ "$page" == "3" ];then
    
        if [ -e "$PathModulConfig/gms_doze.txt" ];then
            echo "<-- -- GMS DOZE Config -- -->"
            echo "gdx > Turn off gms doze fix"
            echo "gdy > Turn on gms doze fix"
            if [ "$GmsDozeBefore" != "$GmsDozeNew" ];then
                if [ "$GmsDozeNew" == "0" ];then
                    echo $kuningPutih"this will set to : off"$ResetWarna
                elif [ "$GmsDozeNew" == "1" ];then
                    echo $hijauPutih"this will set to : on"$ResetWarna
                fi
            else
                if [ "$GmsDozeBefore" == "0" ];then
                    echo $kuningHitam"Current status : off"$ResetWarna
                elif [ "$GmsDozeBefore" == "1" ];then
                    echo $hijauHitam"Current status : on"$ResetWarna
                fi
            fi
            echo $cyanPutih"<<----------<=====*=====>---------->>"$ResetWarna
        fi
        if [ -e "$PathModulConfig/zram.txt" ];then
            echo "<-- -- Zram Config -- -->"
            echo "zrs > Zram setting by system"
            echo "zrx > turn off Zram"
            echo "zrc > costumize Zram size"
            echo "note : do not set to high :D"
            echo "       dont blame me if u got random reboot cause set too high :p"
            if [ "$ZramBefore" != "$ZramNew" ];then
                if [ "$ZramNew" == "0" ];then
                    echo $kuningPutih"this will set to : off"$ResetWarna
                elif [ "$ZramNew" == "1" ];then
                    echo $hijauPutih"this will set to : 1gb "$ResetWarna
                elif [ "$ZramNew" == "2" ];then
                    echo $hijauPutih"this will set to : 2gb"$ResetWarna
                elif [ "$ZramNew" == "3" ];then
                    echo $kuningPutih"this will set to : 3gb"$ResetWarna
                elif [ "$ZramNew" == "4" ];then
                    echo $kuningPutih"this will set to : 4gb"$ResetWarna
                elif [ "$ZramNew" == "5" ];then
                    echo $merahPutih"this will set to : 5gb"$ResetWarna
                elif [ "$ZramNew" == "6" ];then
                    echo $merahPutih"this will set to : 6gb"$ResetWarna
                elif [ "$ZramNew" == "7" ];then
                    echo $merahPutih"this will set to : 7gb"$ResetWarna
                elif [ "$ZramNew" == "8" ];then
                    echo $merahPutih"this will set to : 8gb"$ResetWarna
                elif [ "$ZramNew" == "system" ];then
                    echo $abuHitam"this will set to :  System"$ResetWarna
                fi
            else
                if [ "$ZramBefore" == "0" ];then
                    echo $kuningHitam"Current status : off"$ResetWarna
                elif [ "$ZramBefore" == "1" ];then
                    echo $hijauHitam"Current status : 1gb"$ResetWarna
                elif [ "$ZramBefore" == "2" ];then
                    echo $hijauHitam"Current status : 2gb"$ResetWarna
                elif [ "$ZramBefore" == "3" ];then
                    echo $kuningHitam"Current status : 3gb"$ResetWarna
                elif [ "$ZramBefore" == "4" ];then
                    echo $kuningHitam"Current status : 4gb"$ResetWarna
                elif [ "$ZramBefore" == "5" ];then
                    echo $merahHitam"Current status : 5gb"$ResetWarna
                elif [ "$ZramBefore" == "6" ];then
                    echo $merahHitam"Current status : 6gb"$ResetWarna
                elif [ "$ZramBefore" == "7" ];then
                    echo $merahHitam"Current status : 7gb"$ResetWarna
                elif [ "$ZramBefore" == "8" ];then
                    echo $merahHitam"Current status : 8gb"$ResetWarna
                elif [ "$ZramBefore" == "system" ];then
                    echo $putihHitam"Current status : By System"$ResetWarna
                fi
            fi
            echo $cyanPutih"<<----------<=====*=====>---------->>"$ResetWarna
        fi
        if [ -e "$PathModulConfig/swapinnes.txt" ];then
            echo "<-- -- Swappiness Config -- -->"
            echo "csw > Custom swappiness"
            if [ "$swapinnesBefore" != "$swapinnesNew" ];then
                echo $kuningPutih"this will set to : $swapinnesNew"$ResetWarna
            else
                echo $hijauHitam"Current status : $swapinnesBefore"$ResetWarna
            fi
            echo $cyanPutih"<<----------<=====*=====>---------->>"$ResetWarna
        fi
        if [ -e "$PathModulConfig/zram_optimizer.txt" ];then
            echo "<-- -- Vram Config -- -->"
            echo "zox > Zram optimizer by system"
            echo "zoy > Zram optimizer by tweak"
            if [ "$ZramOptimizerBefore" != "$ZramOptimizerNew" ];then
                if [ "$ZramOptimizerNew" == "0" ];then
                    echo $kuningPutih"this will set to : off"$ResetWarna
                elif [ "$ZramOptimizerNew" == "1" ];then
                    echo $hijauPutih"this will set to : on"$ResetWarna
                fi
            else
                if [ "$ZramOptimizerBefore" == "0" ];then
                    echo $kuningHitam"Current status : off"$ResetWarna
                elif [ "$ZramOptimizerBefore" == "1" ];then
                    echo $hijauHitam"Current status : on"$ResetWarna
                fi
            fi
            echo $cyanPutih"<<----------<=====*=====>---------->>"$ResetWarna
        fi
        echo "current : page 3"
    elif [ "$page" == "4" ];then
        if [ -e "$PathModulConfigAi/ai_status.txt" ];then
            echo "<-- -- AI Config -- -->"
            echo "aix > auto/ai mode off"
            echo "aiy > auto/ai mode on"
            if [ "$GetModeAiBefore" != "$GetModeAiNew" ];then
                if [ $GetModeAiNew == "0" ];then
                    echo $cyanPutih"this will set to : off"$ResetWarna
                elif [ $GetModeAiNew == "3" ];then
                    echo $cyanPutih"this will set to : turn off"$ResetWarna
                elif [ $GetModeAiNew == "1" ];then
                    echo $cyanPutih"this will set to : on"$ResetWarna
                fi
            else
                if [ $GetModeAiBefore == "0" ];then
                    echo $cyanHitam"current status : off"$ResetWarna
                elif [ $GetModeAiBefore == "2" ];then
                    echo $cyanHitam"current status : running"$ResetWarna
                elif [ $GetModeAiBefore == "1" ];then
                    echo $cyanHitam"current status : on"$ResetWarna
                fi
            fi
            echo $cyanPutih"<<----------<=====*=====>---------->>"$ResetWarna
        fi
        if [ -e "$PathModulConfigAi/ai_change.txt" ];then
            echo "<-- -- AI Change mode by -- -->"
            echo "acu > change mode based gpu usage"
            echo "ace > change mode by game only"
            echo "acb > change mode by game or gpu usage"
            if [ "$GetModeAiCBefore" != "$GetModeAiCNew" ];then
                if [ $GetModeAiCNew == "1" ];then
                    echo $cyanPutih"this will set to : by gpu usage"$ResetWarna
                elif [ $GetModeAiCNew == "2" ];then
                    echo $cyanPutih"this will set to : By detected game"$ResetWarna
                elif [ $GetModeAiCNew == "3" ];then
                    echo $cyanPutih"this will set to : both"$ResetWarna
                fi
            else
                if [ $GetModeAiCBefore == "1" ];then
                    echo $cyanHitam"current status : by gpu usage"$ResetWarna
                elif [ $GetModeAiCBefore == "2" ];then
                    echo $cyanHitam"current status : By detected game"$ResetWarna
                elif [ $GetModeAiCBefore == "3" ];then
                    echo $cyanHitam"current status : both"$ResetWarna
                fi
            fi
            echo $cyanPutih"<<----------<=====*=====>---------->>"$ResetWarna
        fi
        if [ -e "$PathModulConfigAi/ai_notif_mode.txt" ];then
            echo "<-- -- AI Notif Config -- -->"
            if [ "$GetModeAiBefore" == "2" ];then
                echo "anx > turn off notif ai";
                echo "anv > use vibration"
                echo "an1 > use notif method 1"
                echo "an2 > use notif method 2"
                if [ "$GetModeAiNotifBefore" != "$GetModeAiNotifNew" ];then
                    if [ "$GetModeAiNotifNew" == "0" ];then
                        echo $putihHitam"this will set to : off"$ResetWarna
                    elif [ "$GetModeAiNotifNew" == "1" ];then
                        echo $cyanPutih"this will set to : use vibration "$ResetWarna
                    elif [ "$GetModeAiNotifNew" == "2" ];then
                        echo $hijauPutih"this will set to : use notif method 1"$ResetWarna
                    elif [ "$GetModeAiNotifNew" == "3" ];then
                        echo $unguPutih"this will set to : use notif method 2"$ResetWarna
                    fi
                else
                    if [ "$GetModeAiNotifBefore" == "0" ];then
                        echo $abuHitam"Current status : off"$ResetWarna
                    elif [ "$GetModeAiNotifBefore" == "1" ];then
                        echo $cyanHitam"Current status : use vibration "$ResetWarna
                    elif [ "$GetModeAiNotifBefore" == "2" ];then
                        echo $hijauHitam"Current status : use notif method 1"$ResetWarna
                    elif [ "$GetModeAiNotifBefore" == "3" ];then
                        echo $unguHitam"Current status : use notif method 2"$ResetWarna
                    fi
                fi
            else
                echo "turn on ai first before setting this . . . ."
            fi
            echo $cyanPutih"<<----------<=====*=====>---------->>"$ResetWarna
        fi
        if [ -e "$PathModulConfigAi/ai_notif_mode_running_status.txt" ];then
            echo "<-- -- AI Notif Running Status Config -- -->"
            if [ "$GetModeAiBefore" == "2" ];then
                echo "ansx > turn off notif running status ai" ;
                echo "ans1 > use notif running while on turbo mode" ;
                echo "ans2 > use notif running while on gaming (recomended)" ;
                if [ "$GetModeAiNotifRunningStatusBefore" != "$GetModeAiNotifRunningStatusNew" ];then
                    if [ "$GetModeAiNotifRunningStatusNew" == "0" ];then
                        echo $putihHitam"this will set to : off"$ResetWarna
                    elif [ "$GetModeAiNotifRunningStatusNew" == "1" ];then
                        echo $kuningPutih"this will set to : notif running while on turbo mode"$ResetWarna
                    elif [ "$GetModeAiNotifRunningStatusNew" == "2" ];then
                        echo $hijauPutih"this will set to : notif running while on gaming"$ResetWarna
                    fi
                else
                    if [ "$GetModeAiNotifRunningStatusBefore" == "0" ];then
                        echo $abuHitam"Current status : off"$ResetWarna
                    elif [ "$GetModeAiNotifRunningStatusBefore" == "1" ];then
                        echo $kuningHitam"Current status : notif running while on turbo mode"$ResetWarna
                    elif [ "$GetModeAiNotifRunningStatusBefore" == "2" ];then
                        echo $hijauHitam"Current status : notif running while on gaming"$ResetWarna
                    fi
                fi
            else
                echo "turn on ai first before setting this . . . ."
            fi
            echo $cyanPutih"<<----------<=====*=====>---------->>"$ResetWarna
        fi
        echo "current : page 4"
    elif [ "$page" == "5" ];then
        if [ -e "$PathModulConfigAi/ai_notif_mode_running.txt" ];then
            echo "<-- -- AI Notif Running Config -- -->"
            if [ "$GetModeAiBefore" == "2" ];then
                echo "anmx > turn off notif running ai" ;
                echo "anm1 > use notif running mode 1" ;
                echo "anm2 > use notif running mode 2" ;
                echo "anm3 > use notif running mode 3" ;
                echo "anm4 > use notif running mode 4" ;
                if [ "$GetModeAiNotifRunningBefore" != "$GetModeAiNotifRunningNew" ];then
                    if [ "$GetModeAiNotifRunningNew" == "0" ];then
                        echo $putihHitam"this will set to : off"$ResetWarna
                    elif [ "$GetModeAiNotifRunningNew" == "1" ];then
                        echo $kuningPutih"this will set to : notif running mode 1"$ResetWarna
                    elif [ "$GetModeAiNotifRunningNew" == "2" ];then
                        echo $hijauPutih"this will set to : notif running mode 2"$ResetWarna
                    elif [ "$GetModeAiNotifRunningNew" == "3" ];then
                        echo $cyanPutih"this will set to : notif running mode 3"$ResetWarna
                    elif [ "$GetModeAiNotifRunningNew" == "4" ];then
                        echo $unguPutih"this will set to : notif running mode 4"$ResetWarna
                    fi
                else
                    if [ "$GetModeAiNotifRunningBefore" == "0" ];then
                        echo $abuHitam"Current status : off"$ResetWarna
                    elif [ "$GetModeAiNotifRunningBefore" == "1" ];then
                        echo $kuningHitam"Current status : notif running mode 1"$ResetWarna
                    elif [ "$GetModeAiNotifRunningBefore" == "2" ];then
                        echo $hijauHitam"Current status : notif running mode 2"$ResetWarna
                    elif [ "$GetModeAiNotifRunningBefore" == "3" ];then
                        echo $cyanHitam"Current status : notif running mode 3"$ResetWarna
                    elif [ "$GetModeAiNotifRunningBefore" == "4" ];then
                        echo $unguHitam"Current status : notif running mode 4"$ResetWarna
                    fi
                fi
            else
                echo "turn on ai first before setting this . . . ."
            fi
            echo $cyanPutih"<<----------<=====*=====>---------->>"$ResetWarna
        fi
        if [ -e "$PathModulConfigAi/wait_time_off.txt" ];then
            echo "<-- -- AI Notif Running Status Config -- -->"
            if [ "$GetModeAiBefore" == "2" ];then
                echo "wtx > set wait time ai to run again while module on mode off"
                if [ "$waitTimeOffBefore" != "$waitTimeOffNew" ];then
                    echo $putihHitam"this will set to : $waitTimeOffNew s"$ResetWarna
                else
                    echo $abuHitam"Current status : $waitTimeOffBefore s"$ResetWarna
                fi
            else
                echo "turn on ai first before setting this . . . ."
            fi
            echo $cyanPutih"<<----------<=====*=====>---------->>"$ResetWarna
        fi
        if [ -e "$PathModulConfigAi/wait_time_on.txt" ];then
            echo "<-- -- AI Notif Running Status Config -- -->"
            if [ "$GetModeAiBefore" == "2" ];then
                echo "wty > set wait time ai to run again while module on mode turbo"
                if [ "$waitTimeOnBefore" != "$waitTimeOnNew" ];then
                    echo $putihHitam"this will set to : $waitTimeOnNew s"$ResetWarna
                else
                    echo $abuHitam"Current status : $waitTimeOnBefore s"$ResetWarna
                fi
            else
                echo "turn on ai first before setting this . . . ."
            fi
            echo $cyanPutih"<<----------<=====*=====>---------->>"$ResetWarna
        fi
        echo "<-- -- App and Game List Config -- -->"
        echo "sag > re-scan app and game list :D "
        echo "sal > to check app list install on your phone"
        echo "sgl > to check game list for trigger ai to mode turbo faster"
        if [ "$RefreshList" == "sudah" ];then
            echo $hijauHitam"refresh list game and app done . . . :p"$ResetWarna
        elif [ "$RefreshList" == "iya" ];then
            echo $hijauHitam"refresh list game and app after save setting :p"$ResetWarna
        fi
        echo $cyanPutih"<<----------<=====*=====>---------->>"$ResetWarna
        echo "current : page 5"
    fi
    if [ "$page" == "1" ];then
        echo "np > go to page $(($page+1))";
    elif [ "$page" == "5" ];then
        echo "pp > go to page $(($page-1))";
    else
        echo "pp > go to page $(($page-1))      |  np > go to page $(($page+1))";
    fi
    if [ "$page" == "5" ];then
        echo "fp > go to first page"
    elif [ "$page" == "1" ];then
        echo "lp > go to last page"
    elif [ "$page" -lt "5" ] && [ "$page" -gt "1" ];then
        echo "fp > go to first page  |  lp > go to last page"
    fi
    # echo "more setting coming soon :p"
    if [ $Perubahan == "ya" ];then
        echo "s/save > save setting"
        # echo "0 > exit"
    fi
    echo "0/e > exit"
    read pilihan
    if [ $pilihan == "mx" ];then
        Perubahan="ya"
        GetModeNew="off"
        usleep 100000
        ListMenu
    elif [ $pilihan == "my" ];then
        Perubahan="ya"
        GetModeNew="on"
        usleep 100000
        ListMenu
    elif [ $pilihan == "mt" ];then
        Perubahan="ya"
        GetModeNew="turbo"
        usleep 100000
        ListMenu
    elif [ $pilihan == "lm" ];then
        Perubahan="ya"
        GetModeNew="lag"
        usleep 100000
        ListMenu
    elif [ $pilihan == "srd" ];then
        Perubahan="ya"
        GetModeRenderNew="system"
        usleep 100000
        ListMenu
    elif [ $pilihan == "opd" ];then
        Perubahan="ya"
        GetModeRenderNew="opengl"
        usleep 100000
        ListMenu
    elif [ $pilihan == "ops" ];then
        Perubahan="ya"
        GetModeRenderNew="skiagl"
        usleep 100000
        ListMenu
    elif [ $pilihan == "vkn" ];then
        Perubahan="ya"
        GetModeRenderNew="skiavk"
        usleep 100000
        ListMenu
    elif [ $pilihan == "fs" ];then
        Perubahan="ya"
        GetModeFCNew="system"
        usleep 100000
        ListMenu
    elif [ $pilihan == "fy" ];then
        Perubahan="ya"
        GetModeFCNew="1"
        usleep 100000
        ListMenu
    elif [ $pilihan == "fcs" ];then
        Perubahan="ya"
        GetModeFsyncNew="system"
        usleep 100000
        ListMenu
    elif [ $pilihan == "fcx" ];then
        Perubahan="ya"
        GetModeFsyncNew="0"
        usleep 100000
        ListMenu
    elif [ $pilihan == "fcy" ];then
        Perubahan="ya"
        GetModeFsyncNew="1"
        usleep 100000
        ListMenu
    elif [ $pilihan == "fca" ];then
        Perubahan="ya"
        GetModeFsyncNew="auto"
        usleep 100000
        ListMenu
    elif [ $pilihan == "adx" ];then
        Perubahan="ya"
        GetModeAdrenoNew="0"
        usleep 100000
        ListMenu
    elif [ $pilihan == "adl" ];then
        Perubahan="ya"
        GetModeAdrenoNew="1"
        usleep 100000
        ListMenu
    elif [ $pilihan == "adm" ];then
        Perubahan="ya"
        GetModeAdrenoNew="2"
        usleep 100000
        ListMenu
    elif [ $pilihan == "adh" ];then
        Perubahan="ya"
        GetModeAdrenoNew="3"
        usleep 100000
        ListMenu
    elif [ $pilihan == "adt" ];then
        Perubahan="ya"
        GetModeAdrenoNew="tweak"
        usleep 100000
        ListMenu
    elif [ $pilihan == "rms" ];then
        Perubahan="ya"
        GetModeRamNew="0"
        usleep 100000
        ListMenu
    elif [ $pilihan == "rm1" ];then
        Perubahan="ya"
        GetModeRamNew="1"
        usleep 100000
        ListMenu
    elif [ $pilihan == "rm2" ];then
        Perubahan="ya"
        GetModeRamNew="2"
        usleep 100000
        ListMenu
    elif [ $pilihan == "rm3" ];then
        Perubahan="ya"
        GetModeRamNew="3"
        usleep 100000
        ListMenu
    elif [ $pilihan == "rm4" ];then
        Perubahan="ya"
        GetModeRamNew="4"
        usleep 100000
        ListMenu
    elif [ $pilihan == "aix" ];then
        Perubahan="ya"
        # GetModeAiNew="1"
        if [ $GetModeAiBefore == "2" ];then
            GetModeAiNew="3"
        else
            GetModeAiNew="0"
        fi
        usleep 100000
        ListMenu
    elif [ $pilihan == "acu" ];then
        Perubahan="ya"
        GetModeAiCNew="1"
        usleep 100000
        ListMenu
    elif [ $pilihan == "ace" ];then
        Perubahan="ya"
        GetModeAiCNew="2"
        usleep 100000
        ListMenu
    elif [ $pilihan == "acb" ];then
        Perubahan="ya"
        GetModeAiCNew="3"
        usleep 100000
        ListMenu
    elif [ $pilihan == "aiy" ];then
        Perubahan="ya"
        if [ $GetModeAiBefore == "0" ];then
            GetModeAiNew="1"
        else
            echo "ai still running . . ."
            GetModeAiNew="2"
        fi
        usleep 100000
        ListMenu
    elif [ $pilihan == "anx" ];then
        Perubahan="ya"
        GetModeAiNotifNew="0"
        usleep 100000
        ListMenu
    elif [ $pilihan == "anv" ];then
        Perubahan="ya"
        GetModeAiNotifNew="1"
        usleep 100000
        ListMenu
    elif [ $pilihan == "an1" ];then
        Perubahan="ya"
        GetModeAiNotifNew="2"
        usleep 100000
        ListMenu
    elif [ $pilihan == "an2" ];then
        Perubahan="ya"
        GetModeAiNotifNew="3"
        usleep 100000
        ListMenu
    elif [ $pilihan == "anmx" ];then
        Perubahan="ya"
        GetModeAiNotifRunningNew="0"
        usleep 100000
        ListMenu
    elif [ $pilihan == "anm1" ];then
        Perubahan="ya"
        GetModeAiNotifRunningNew="1"
        usleep 100000
        ListMenu
    elif [ $pilihan == "anm2" ];then
        Perubahan="ya"
        GetModeAiNotifRunningNew="2"
        usleep 100000
        ListMenu
    elif [ $pilihan == "anm3" ];then
        Perubahan="ya"
        GetModeAiNotifRunningNew="3"
        usleep 100000
        ListMenu
    elif [ $pilihan == "anm4" ];then
        Perubahan="ya"
        GetModeAiNotifRunningNew="4"
        usleep 100000
        ListMenu
    elif [ $pilihan == "ansx" ];then
        Perubahan="ya"
        GetModeAiNotifRunningStatusNew="0"
        usleep 100000
        ListMenu
    elif [ $pilihan == "ans1" ];then
        Perubahan="ya"
        GetModeAiNotifRunningStatusNew="1"
        usleep 100000
        ListMenu
    elif [ $pilihan == "ans2" ];then
        Perubahan="ya"
        GetModeAiNotifRunningStatusNew="2"
        usleep 100000
        ListMenu
    elif [ $pilihan == "np" ];then
        if [ "$page" -lt "5" ];then
            page=$(($page+1))
        else
            page="1"
            echo "error,move to page 1"
        fi
        usleep 10000
        ListMenu
    elif [ $pilihan == "pp" ];then
        if [ "$page" -gt "1" ];then
            page=$(($page-1))
        else
            page="1"
            echo "error,move to page 1"
        fi
        usleep 10000
        ListMenu
    elif [ $pilihan == "fp" ];then
        page="1"
        usleep 10000
        ListMenu
    elif [ $pilihan == "lp" ];then
        page="5"
        usleep 10000
        ListMenu
    elif [ $pilihan == "wtx" ];then
        echo "how long (example : 1) ??"
        read getnumber
        waitTimeOffNew=$getnumber
        usleep 100000
        ListMenu
    elif [ $pilihan == "wty" ];then
        echo "how long (example : 1) ??"
        read getnumber
        waitTimeOnNew=$getnumber
        usleep 100000
        ListMenu
    elif [ $pilihan == "gdx" ];then
        Perubahan="ya"
        GmsDozeNew="0"
        usleep 100000
        ListMenu
    elif [ $pilihan == "gdy" ];then
        Perubahan="ya"
        GmsDozeNew="1"
        usleep 100000
        ListMenu
    elif [ $pilihan == "sag" ];then
        Perubahan="ya"
        echo "scan now (y/wsc/n)?"
        echo "y=yes,wsc=when save changes,n=no"
        read askScan
        if [ "$askScan" == "y" ];then
            RefreshList="sudah"
            echo "--- --- --- --- ---"
            echo "Re Scan app & game list"
            echo "--- --- --- --- ---"
            sh $ModulPath/ZyC_Turbo/initialize.sh "App" & wait > /dev/null 2>&1
            echo "done . . ."
        elif [ "$askScan" == "wsc" ];then
            RefreshList="iya"
        else 
            askScan="nope"
        fi
        usleep 1000000
        ListMenu
    elif [ $pilihan == "sal" ];then
        Perubahan="ya"
        cat "$PathModulConfigAi/list_app_package_detected.txt"
        echo "Press any key to continue . . . ."
        read -n 3 -s -r 
        usleep 100000
        ListMenu
    elif [ $pilihan == "sgl" ];then
        Perubahan="ya"
        cat "$PathModulConfigAi/list_app_auto_turbo.txt"
        echo "Press any key to continue . . . ."
        read -n 3 -s -r 
        usleep 100000
        ListMenu
    elif [ $pilihan == "zrx" ];then
        Perubahan="ya"
        ZramNew="0"
        usleep 100000
        ListMenu
    elif [ $pilihan == "zrc" ];then
        Perubahan="ya"
        echo '--- --- --- ---'
        echo 'change set vram to ?'
        echo 'you can set from 1 to 4'
        echo 'up to 8gb :v '
        read GetChoice
        if [ "$GetChoice" -le "8" ];then
            ZramNew=$GetChoice
            echo "set to : $GetChoice Gb"
        else
            echo "input error . . ."
        fi
        usleep 100000
        ListMenu
    elif [ $pilihan == "zrs" ];then
        Perubahan="ya"
        ZramNew="system"
        usleep 100000
        ListMenu
    elif [ $pilihan == "csw" ];then
        Perubahan="ya"
         echo '--- --- --- ---'
        echo 'change set vram to ?'
        echo 'you can set from 0 to 100 :p'
        read GetChoice
        if [ "$GetChoice" -le "100" ];then
            swapinnesNew=$GetChoice
            echo "set to : $GetChoice Gb"
        else
            echo "input error . . ."
        fi
        usleep 100000
        ListMenu
    elif [ $pilihan == "zox" ];then
        Perubahan="ya"
        ZramOptimizerNew="0"
        usleep 100000
        ListMenu
    elif [ $pilihan == "zoy" ];then
        Perubahan="ya"
        ZramOptimizerNew="1"
        usleep 100000
        ListMenu
    elif [ $pilihan == "0" ];then
        exitSetting
    elif [ $pilihan == "e" ];then
        exitSetting
    else 
        if [ $Perubahan == "ya" ];then
            if [ $pilihan == "s" ];then
                savedata="yes"
            elif [ $pilihan == "save" ];then
                savedata="yes"
            else
                savedata="no"
            fi
            if [ $savedata == "yes" ];then
                saveSetting
            fi
        fi
        echo "request not found,please try again"
        usleep 1000000
        # usleep 100000
        ListMenu
    fi
}
exitSetting(){
    clear
    echo "exit (y/n)?"
    read keluar
    if [ $keluar == "y" ];then
        if [ "$RestartNotif" == "iya" ];then
            echo " please restart to take effect for gms doze fix . . . ."
        fi
        echo "selamat tinggal :v "
        echo "Exit after :"
        for timeExit in 3s 2s 1s 0s ;
        do
            echo "$timeExit"
            usleep 1000000
        done
        for GetTerminal in  ` ps -a | grep 'u0' | awk '{print $3}' ` 
        do 
            kill -9 $GetTerminal 
        done
    else
        page="1"
        ListMenu
    fi
}
saveSetting()
{
    echo "saving changes . . ."
    RunTweak="tidak"
    if [ "$GetModeBefore" != "$GetModeNew" ];then
        echo "$GetModeNew" > $PathModulConfig/status_modul.txt ; 
        GetModeBefore=$GetModeNew;
        RunTweak="iya"
    fi
    if [ "$GetModeRenderBefore" != "$GetModeRenderNew" ];then
        echo "$GetModeRenderNew" > $PathModulConfig/mode_render.txt ; 
        GetModeRenderBefore=$GetModeRenderNew;
        RunTweak="iya"
    fi
    if [ "$GetModeFCBefore" != "$GetModeFCNew" ];then
        echo "$GetModeFCNew" > $PathModulConfig/fastcharge.txt ; 
        GetModeFCBefore=$GetModeFCNew;
        RunTweak="iya"
    fi
    if [ "$GetModeFsyncBefore" != "$GetModeFsyncNew" ];then
        echo "$GetModeFsyncNew" > $PathModulConfig/fsync_mode.txt ; 
        GetModeFsyncBefore=$GetModeFsyncNew;
        RunTweak="iya"
    fi
    if [ "$GetModeAdrenoBefore" != "$GetModeAdrenoNew" ];then
        echo "$GetModeAdrenoNew" > $PathModulConfig/GpuBooster.txt ; 
        GetModeAdrenoBefore=$GetModeAdrenoNew;
        RunTweak="iya"
    fi
    if [ "$GetModeRamBefore" != "$GetModeRamNew" ];then
        echo "$GetModeRamNew" > $PathModulConfig/custom_ram_management.txt ; 
        GetModeRamBefore=$GetModeRamNew;
        RunTweak="iya"
    fi
    if [ "$GetModeAiBefore" != "$GetModeAiNew" ];then
        echo "$GetModeAiNew" > $PathModulConfigAi/ai_status.txt ; 
        GetModeAiBefore=$GetModeAiNew;
    fi
    if [ "$GetModeAiNotifNew" != "$GetModeAiNotifBefore" ];then
        echo "$GetModeAiNotifNew" > $PathModulConfigAi/ai_notif_mode.txt ; 
        GetModeAiNotifBefore=$GetModeAiNotifNew;
    fi
    if [ "$GetModeAiNotifRunningNew" != "$GetModeAiNotifRunningBefore" ];then
        echo "$GetModeAiNotifRunningNew" > $PathModulConfigAi/ai_notif_mode_running.txt ; 
        GetModeAiNotifRunningBefore=$GetModeAiNotifRunningNew;
    fi
    if [ "$GetModeAiNotifRunningStatusNew" != "$GetModeAiNotifRunningStatusBefore" ];then
        echo "$GetModeAiNotifRunningStatusNew" > $PathModulConfigAi/ai_notif_mode_running_status.txt ; 
        GetModeAiNotifRunningStatusBefore=$GetModeAiNotifRunningStatusNew;
    fi
    if [ "$waitTimeOffNew" != "$waitTimeOffBefore" ];then
        echo "$waitTimeOffNew" > $PathModulConfigAi/wait_time_off.txt ; 
        waitTimeOffBefore=$waitTimeOffNew;
    fi
    if [ "$waitTimeOnNew" != "$waitTimeOnBefore" ];then
        echo "$waitTimeOnNew" > $PathModulConfigAi/wait_time_on.txt ; 
        waitTimeOnBefore=$waitTimeOnNew;
    fi
    if [ "$GmsDozeNew" != "$GmsDozeBefore" ];then
        echo "$GmsDozeNew" > $PathModulConfig/gms_doze.txt ; 
        GmsDozeBefore=$GmsDozeNew;
        RestartNotif="iya"
    fi
    if [ "$ZramNew" != "$ZramBefore" ];then
        echo "$ZramNew" > $PathModulConfig/zram.txt ; 
        ZramBefore=$ZramNew;
        RunTweak="iya"
    fi
    if [ "$swapinnesBefore" != "$swapinnesNew" ];then
        echo "$swapinnesNew" > $PathModulConfig/swapinnes.txt ; 
        swapinnesBefore=$swapinnesNew;
        RunTweak="iya"
    fi
    if [ "$ZramOptimizerBefore" != "$ZramOptimizerNew" ];then
        echo "$ZramOptimizerNew" > $PathModulConfig/zram_optimizer.txt ; 
        ZramOptimizerBefore=$ZramOptimizerNew;
        RunTweak="iya"
    fi
    if [ "$GetModeAiCBefore" != "$GetModeAiCNew" ];then
        echo "$GetModeAiCNew" > $PathModulConfigAi/ai_change.txt ; 
        GetModeAiCBefore=$GetModeAiCNew;
        RunTweak="iya"
    fi
    if [ "$RunTweak" == "iya" ];then
        echo "--- --- --- --- ---"
        echo "re run tweak . . ."
        echo "--- --- --- --- ---"
        zyc_turbo & wait
    fi
    if [ "$GetModeAiNew" == "1" ];then
        echo "--- --- --- --- ---"
        echo "turn on ai"
        echo "--- --- --- --- ---"
        zyc_auto & wait
    fi
    if [ "$RefreshList" == "iya" ];then
        echo "--- --- --- --- ---"
        echo "Re Scan app & game list"
        echo "--- --- --- --- ---"
        sh $ModulPath/ZyC_Turbo/initialize.sh "App" & wait > /dev/null 2>&1
    fi
    if [ "$RestartNotif" == "iya" ];then
            echo " please restart to take effect for gms doze fix/vram use system . . . ."
        fi
    echo "done . . . "
    usleep 2000000
    clear
    Perubahan="tidak"
    exitSetting
}
ListMenu